{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('[data-start]');\nstartButton.disabled = true;\nconst input = document.querySelector('#datetime-picker');\nconst timeNow = new Date();\nlet selectedDate = 0;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= timeNow) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      return;\n    }\n\n    startButton.disabled = false;\n    selectedDate = selectedDates[0];\n  },\n};\n\nflatpickr('#datetime-picker', options);\nstartButton.addEventListener('click', startTimer);\n\nfunction updateTimer(endDate) {\n  const timeCurrent = new Date();\n  const timeDifference = endDate - timeCurrent;\n\n  if (timeDifference <= 0) {\n    clearInterval(timerInterval);\n    startButton.disabled = false;\n    input.disabled = false;\n\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nlet timerInterval;\nfunction startTimer() {\n  if (selectedDate) {\n    timerInterval = setInterval(() => updateTimer(selectedDate), 1000);\n\n    startButton.disabled = true;\n    input.disabled = true;\n  }\n}\n"],"names":["startButton","input","timeNow","selectedDate","options","selectedDates","iziToast","flatpickr","startTimer","updateTimer","endDate","timeCurrent","timeDifference","timerInterval","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"+IAMA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACzDA,EAAY,SAAW,GACvB,MAAMC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAU,IAAI,KACpB,IAAIC,EAAe,EAEnB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,IAAMH,EAAS,CAC/BI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACD,MACD,CAEDN,EAAY,SAAW,GACvBG,EAAeE,EAAc,EAC9B,CACH,EAEAE,EAAU,mBAAoBH,CAAO,EACrCJ,EAAY,iBAAiB,QAASQ,CAAU,EAEhD,SAASC,EAAYC,EAAS,CAC5B,MAAMC,EAAc,IAAI,KAClBC,EAAiBF,EAAUC,EAEjC,GAAIC,GAAkB,EAAG,CACvB,cAAcC,CAAa,EAC3Bb,EAAY,SAAW,GACvBC,EAAM,SAAW,GAEjB,MACD,CAED,KAAM,CAAE,KAAAa,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAc,EAElE,SAAS,cAAc,aAAa,EAAE,YAAcO,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCI,EAAeH,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCG,EAAeF,CAAO,CAC1B,CACA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CACA,SAASF,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,IAAIJ,EACJ,SAASL,GAAa,CAChBL,IACFU,EAAgB,YAAY,IAAMJ,EAAYN,CAAY,EAAG,GAAI,EAEjEH,EAAY,SAAW,GACvBC,EAAM,SAAW,GAErB"}